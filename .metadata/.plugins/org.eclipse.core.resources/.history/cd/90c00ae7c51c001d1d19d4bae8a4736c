//lex_auth_012899606137856000130
//do not modify the above line

package mergesortexercise1;

public class Tester {

	public static void mergeSort(int[] elements, int size) {
		if(size < 2) {
			return;
		}
		
		int mid = size/2;
		int[] right = new int[mid];
		int[] left = new int[size - mid ]; 
		
		
		for(int index : right ) {
			right[index] = elements[index];
		}
		
		for(int index : left ) {
			left[index] = elements[index];
		}
		
		
		merge(elements, left, right, mid, size - mid);
		/*
		

		mergeSort(left, mid);

		mergeSort(right, size - mid);

		
		*/
	}

	public static void merge(int[] elements, int[] left, int[] right, int leftMerge, int rightMerge) {
		
		System.out.println();
		
		int firstIndex = 0; 
		int secondIndex = 0;
		int thirdIndex = 0;
		
		while (firstIndex < leftMerge && secondIndex < rightMerge) {
			if (left[firstIndex] <= right[secondIndex])
				elements[thirdIndex++] = left[firstIndex++];
			else
				elements[thirdIndex++] = right[secondIndex++];
		}

		while (firstIndex < leftMerge)
			elements[thirdIndex++] = left[firstIndex++];

		while (secondIndex < rightMerge)
			elements[thirdIndex++] = right[secondIndex++];
		
	}

	public static void displayArray(int[] elements) {
		for (int element : elements)
			System.out.print(element + " ");
		System.out.println();
	}

	public static void main(String[] args) {
		int[] elements = { 95, 56, 20, 98, 34, 77, 80 };

		System.out.println("Given Array:");
		displayArray(elements);

		mergeSort(elements, elements.length);

		System.out.println("Sorted Array:");
		displayArray(elements);
	

	}

}
